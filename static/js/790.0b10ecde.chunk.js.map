{"version":3,"file":"static/js/790.0b10ecde.chunk.js","mappings":"4NACA,EAA4B,+BAA5B,EAAkE,0BAAlE,EAAoG,2BAApG,EAA2I,+B,SCK5H,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACPC,GAAaC,EAAAA,EAAAA,MAAnBC,KAeFC,EAAc,SAACC,GACnB,MAAwBA,EAAEC,cAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,OAAQb,GACN,IAAK,OACHC,EAAQY,GACR,MAEF,IAAK,SACHV,EAAUU,GACV,MAEF,QACE,OAAO,IAAIC,MAAJ,WAIPC,EAAQ,WACZd,EAAQ,IACRE,EAAU,KAGZ,OACE,+BACE,kBAAMa,UAAWC,EAAQC,SApCR,SAACP,GACpBA,EAAEQ,iBACaZ,EAASa,MAAK,SAAAC,GAAO,OAAIA,EAAQrB,OAASA,KAEvDsB,MAAM,kCAGRjB,EAAW,CACTL,KAAAA,EACAE,MAAAA,IAEFa,MAyBE,WACE,8BACE,iBAAMC,UAAWC,EAAjB,mBACA,kBACEM,KAAK,OACLvB,KAAK,OACLgB,UAAWC,EACXJ,MAAOb,EACPwB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,8BACE,iBAAMX,UAAWC,EAAjB,qBACA,kBACEM,KAAK,MACLvB,KAAK,SACLgB,UAAWC,EACXJ,MAAOX,EACPsB,SAAUd,EACVe,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQX,UAAWC,EAAaM,KAAK,SAASK,SAAUtB,EAAxD,8B,cC1ER,EAA2B,8BAA3B,EAAqE,+BAArE,EAA2G,0BCIrGuB,EAAc,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QACbS,EAAoBT,EAApBS,GAAI9B,EAAgBqB,EAAhBrB,KAAME,EAAUmB,EAAVnB,MAClB,GAAuC6B,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwB1B,EAAxB,KAAwBA,UACxB,OACE,gBAAIU,UAAWC,EAAf,WACE,yBAAIjB,EAAJ,KAAYE,MACZ,mBACEc,UAAWC,EACXM,KAAK,SACLK,SAAUtB,EACV2B,QAAS,kBAAMD,EAAcF,IAJ/B,wBCwBN,EA7BoB,WAChB,OAAkDtB,EAAAA,EAAAA,MAApCD,EAAd,EAAQE,KAAgByB,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,WAC7BC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,UAUpCG,EARa,KAAXH,EACO7B,EAEJA,EAAS6B,QAAO,SAAAf,GAAO,OAC1BA,EAAQrB,KAAKwC,cAAcC,SAASL,EAAOI,kBAKnD,OACI,eAAIxB,UAAWC,EAAf,SAEKiB,GAAa3B,IAAa4B,GACvBI,EAAMG,KAAI,gBAAGZ,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACN,SAAC2B,EAAD,CAEIR,QAAS,CAAES,GAAAA,EAAI9B,KAAAA,EAAME,MAAAA,IADhB4B,SCxB7B,EAAwB,sBAAxB,EAA0D,0BAA1D,EAA4F,sB,UCqB5F,EAlBe,WACX,IAAMa,GAAWC,EAAAA,EAAAA,MACXR,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,UAE1C,OACI,mBAAOpB,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,oCAGA,kBACIJ,MAAOuB,EACPZ,SAAU,SAACb,GAAD,OAAOgC,GAASE,EAAAA,EAAAA,GAAalC,EAAEC,cAAcC,SACvDG,UAAWC,QCG3B,EAdqB,WACjB,OACI,+BACI,iBAAKD,UAAU,YAAf,WAEI,uCACA,SAAClB,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"ContactForm_labelText__JB4h1\",\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import { useState } from \"react\";\nimport { useAddContactMutation } from \"redux/contacts/contactsApi\";\nimport { useGetContactsQuery } from \"redux/contacts/contactsApi\";\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const onList = contacts.find(contact => contact.name === name);\n    if (onList) {\n      alert('This contact is already added');\n      return;\n    }\n    addContact({\n      name,\n      phone,\n    });\n    reset();\n  }\n  const handleInput = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return new Error(`Error`);\n    }\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label>\n          <span className={s.labelText}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            value={name}\n            onChange={handleInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required />\n        </label>\n\n        <label>\n          <span className={s.labelText}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            value={phone}\n            onChange={handleInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={s.submitBtn} type=\"submit\" disabled={isLoading}>Add contact</button>\n      </form>\n\n    </>\n  );\n};\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactList_listItem__SptUx\",\"removeBtn\":\"ContactList_removeBtn__HBL9U\",\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\n\nimport s from './ContactList.module.css';\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, phone } = contact;\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <li className={s.listItem}>\n      <p>{name}: {phone}</p>\n      <button\n        className={s.removeBtn}\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}>remove</button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n}\n\nexport { ContactItem };\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from \"./ContactItem\";\nimport { useGetContactsQuery } from \"redux/contacts/contactsApi\";\n\nimport s from './ContactList.module.css'\n\nconst ContactList = () => {\n    const { data: contacts, isSuccess, isFetching } = useGetContactsQuery();\n    const filter = useSelector(state => state.filter);\n    const filteredContacts = () => {\n        if (filter === '') {\n            return contacts;\n        }\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n    };\n    const items = filteredContacts();\n    return (\n        <ul className={s.list}>\n\n            {isSuccess && contacts && !isFetching &&\n                items.map(({ id, name, phone }) => (\n                    <ContactItem\n                        key={id}\n                        contact={{ id, name, phone }}\n                    />\n\n                ))}\n        </ul>\n    )\n};\n\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"labelText\":\"Filter_labelText__vRYcr\",\"input\":\"Filter_input__N7T3z\"};","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactSlice';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter);\n\n    return (\n        <label className={s.label}>\n            <span className={s.labelText}>\n                Find contacts by name\n            </span>\n            <input\n                value={filter}\n                onChange={(e) => dispatch(changeFilter(e.currentTarget.value))}\n                className={s.input}\n            />\n        </label>\n    );\n}\n\nexport default Filter;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport React from \"react\";\n\nconst ContactsPage = () => {\n    return (\n        <>\n            <div className=\"container\">\n\n                <h1>Phonebook</h1>\n                <ContactForm />\n                <h2>Contacts</h2>\n                <Filter />\n                <ContactList />\n            </div>\n        </>\n    )\n}\nexport default ContactsPage;"],"names":["ContactForm","useState","name","setName","phone","setNumber","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","handleInput","e","currentTarget","value","Error","reset","className","s","onSubmit","preventDefault","find","contact","alert","type","onChange","pattern","title","required","disabled","ContactItem","id","useDeleteContactMutation","deleteContact","onClick","isSuccess","isFetching","filter","useSelector","state","items","toLowerCase","includes","map","dispatch","useDispatch","changeFilter"],"sourceRoot":""}